apply plugin: 'maven'
apply plugin: 'signing'

signing {
    sign configurations.archives
}

task sdkJar(type: Jar) {
    from fileTree(dir: 'build/intermediates/classes/release').matching { include 'jp/studyplus/android/sdk/**' }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.getSrcDirs()
}

task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.getSrcDirs()
}

artifacts {
    archives sdkJar
    archives androidSourcesJar
    archives androidJavadocsJar
}

if (!gradle.startParameter.taskNames.contains('uploadArchives')) {
    return
}

// gradle --daemon option makes System.console() null.
// you must turn --daemon off when executing uploadArchives.
def requireInput = { message ->
    if (System.console() == null){
        throw new IllegalStateException("try turning --daemon off")
    }
    "${System.console().readPassword(message)}"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(
                    userName: requireInput("\nsonatype-username:"),
                    password: requireInput("sonatype-password:") )
            }
            pom.version = "1.0.3"
            pom.groupId = 'jp.studyplus.android.sdk'
            pom.artifactId = "studyplus-android-sdk"
            pom.project {
                name 'Studyplus Android SDK'
                description 'Studyplus SDK for Android'
                url 'https://github.com/studyplus/Studyplus-Android-SDK'
                scm {
                    def location = 'scm:git@github.com:studyplus/Studyplus-Android-SDK.git'
                    url location
                    connection location
                    developerConnection location
                }
                licenses {
                    license {
                        name 'MIT License'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'x7c1'
                        name 'haco'
                    }
                }
            }
        }
    }
}
